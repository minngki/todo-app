{"ast":null,"code":"var _jsxFileName = \"/Users/minjikim/study/todo-app/src/components/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport todo from './Todo.module.css';\nimport TodoItem from './TodoItem'; //상태변경 컴포넌트\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  _s();\n\n  const {\n    inputList\n  } = props;\n  const [toggle, setToggle] = useState(false);\n  const [list, setList] = useState(inputList);\n  list.concat(inputList);\n\n  const onToggle = id => {\n    //click시 해당 할일 상태 변경\n    setList(list.map(item => item.id === id ? { ...item,\n      done: !item.done\n    } : item));\n    setToggle(!toggle);\n  };\n\n  const onRemove = id => {\n    // click시 해당 할일 제거\n    setList(list.filter(item => item.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.listBlock,\n    children: list.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      todos: item,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"EqzOc3gYD9vI7eZ+yyAkT8yVqT0=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","todo","TodoItem","TodoList","props","inputList","toggle","setToggle","list","setList","concat","onToggle","id","map","item","done","onRemove","filter","listBlock"],"sources":["/Users/minjikim/study/todo-app/src/components/TodoList.tsx"],"sourcesContent":["import { useState } from 'react'\nimport todo from './Todo.module.css'\nimport { IList } from './TodoCreate'\nimport TodoItem from './TodoItem'\n\n//상태변경 컴포넌트\n\nconst TodoList = (props: { inputList: IList[] }) => {\n  const { inputList } = props\n  const [toggle, setToggle] = useState<boolean>(false)\n  const [list, setList] = useState<IList[]>(inputList)\n\n  list.concat(inputList)\n\n  const onToggle = (id: number) => {\n    //click시 해당 할일 상태 변경\n    setList(\n      list.map((item) =>\n        item.id === id ? { ...item, done: !item.done } : item\n      )\n    )\n    setToggle(!toggle)\n  }\n  const onRemove = (id: number) => {\n    // click시 해당 할일 제거\n    setList(list.filter((item) => item.id !== id))\n  }\n\n  return (\n    <div className={todo.listBlock}>\n      {list.map((item) => (\n        <TodoItem\n          todos={item}\n          key={item.id}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default TodoList\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAmC;EAAA;;EAClD,MAAM;IAAEC;EAAF,IAAgBD,KAAtB;EACA,MAAM,CAACE,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAU,KAAV,CAApC;EACA,MAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAUK,SAAV,CAAhC;EAEAG,IAAI,CAACE,MAAL,CAAYL,SAAZ;;EAEA,MAAMM,QAAQ,GAAIC,EAAD,IAAgB;IAC/B;IACAH,OAAO,CACLD,IAAI,CAACK,GAAL,CAAUC,IAAD,IACPA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGE,IAAL;MAAWC,IAAI,EAAE,CAACD,IAAI,CAACC;IAAvB,CAAjB,GAAiDD,IADnD,CADK,CAAP;IAKAP,SAAS,CAAC,CAACD,MAAF,CAAT;EACD,CARD;;EASA,MAAMU,QAAQ,GAAIJ,EAAD,IAAgB;IAC/B;IACAH,OAAO,CAACD,IAAI,CAACS,MAAL,CAAaH,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAlC,CAAD,CAAP;EACD,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAEX,IAAI,CAACiB,SAArB;IAAA,UACGV,IAAI,CAACK,GAAL,CAAUC,IAAD,iBACR,QAAC,QAAD;MACE,KAAK,EAAEA,IADT;MAGE,QAAQ,EAAEE,QAHZ;MAIE,QAAQ,EAAEL;IAJZ,GAEOG,IAAI,CAACF,EAFZ;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAjCD;;GAAMT,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}