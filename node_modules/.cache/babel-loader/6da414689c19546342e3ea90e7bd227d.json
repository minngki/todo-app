{"ast":null,"code":"import _objectSpread from\"/Users/minjikim/study/todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/minjikim/study/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import todo from'./Todo.module.css';import TodoItem from'./TodoItem';//상태변경 컴포넌트\nimport{jsx as _jsx}from\"react/jsx-runtime\";var TodoList=function TodoList(props){var inputList=props.inputList;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],setToggle=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),list=_useState4[0],setList=_useState4[1];var onToggle=function onToggle(id){//click시 해당 할일 상태 변경\nlist.concat(inputList.map(function(item){return item.id===id?_objectSpread(_objectSpread({},item),{},{done:!item.done}):item;}));setList(list);setToggle(!toggle);};var onRemove=function onRemove(id){// click시 해당 할일 제거\nsetList(list.concat(inputList.filter(function(item){return item.id!==id;})));};return/*#__PURE__*/_jsx(\"div\",{className:todo.listBlock,children:inputList.map(function(item){return/*#__PURE__*/_jsx(TodoItem,{todos:item,onRemove:onRemove,onToggle:onToggle},item.id);})});};export default TodoList;","map":{"version":3,"names":["useState","todo","TodoItem","TodoList","props","inputList","toggle","setToggle","list","setList","onToggle","id","concat","map","item","done","onRemove","filter","listBlock"],"sources":["/Users/minjikim/study/todo-app/src/components/TodoList.tsx"],"sourcesContent":["import { useState } from 'react'\nimport todo from './Todo.module.css'\nimport { IList } from './TodoCreate'\nimport TodoItem from './TodoItem'\n\n//상태변경 컴포넌트\n\nconst TodoList = (props: { inputList: IList[] }) => {\n  const { inputList } = props\n  const [toggle, setToggle] = useState<boolean>(false)\n  const [list, setList] = useState<IList[]>([])\n\n  const onToggle = (id: number) => {\n    //click시 해당 할일 상태 변경\n    list.concat(\n      inputList.map((item) =>\n        item.id === id ? { ...item, done: !item.done } : item\n      )\n    )\n    setList(list)\n    setToggle(!toggle)\n  }\n  const onRemove = (id: number) => {\n    // click시 해당 할일 제거\n    setList(list.concat(inputList.filter((item) => item.id !== id)))\n  }\n\n  return (\n    <div className={todo.listBlock}>\n      {inputList.map((item) => (\n        <TodoItem\n          todos={item}\n          key={item.id}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default TodoList\n"],"mappings":"uOAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAOC,KAAP,KAAiB,mBAAjB,CAEA,MAAOC,SAAP,KAAqB,YAArB,CAEA;2CAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAmC,CAClD,GAAQC,UAAR,CAAsBD,KAAtB,CAAQC,SAAR,CACA,cAA4BL,QAAQ,CAAU,KAAV,CAApC,wCAAOM,MAAP,eAAeC,SAAf,eACA,eAAwBP,QAAQ,CAAU,EAAV,CAAhC,yCAAOQ,IAAP,eAAaC,OAAb,eAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,CAACC,EAAD,CAAgB,CAC/B;AACAH,IAAI,CAACI,MAAL,CACEP,SAAS,CAACQ,GAAV,CAAc,SAACC,IAAD,QACZA,KAAI,CAACH,EAAL,GAAYA,EAAZ,gCAAsBG,IAAtB,MAA4BC,IAAI,CAAE,CAACD,IAAI,CAACC,IAAxC,GAAiDD,IADrC,EAAd,CADF,EAKAL,OAAO,CAACD,IAAD,CAAP,CACAD,SAAS,CAAC,CAACD,MAAF,CAAT,CACD,CATD,CAUA,GAAMU,SAAQ,CAAG,QAAXA,SAAW,CAACL,EAAD,CAAgB,CAC/B;AACAF,OAAO,CAACD,IAAI,CAACI,MAAL,CAAYP,SAAS,CAACY,MAAV,CAAiB,SAACH,IAAD,QAAUA,KAAI,CAACH,EAAL,GAAYA,EAAtB,EAAjB,CAAZ,CAAD,CAAP,CACD,CAHD,CAKA,mBACE,YAAK,SAAS,CAAEV,IAAI,CAACiB,SAArB,UACGb,SAAS,CAACQ,GAAV,CAAc,SAACC,IAAD,qBACb,KAAC,QAAD,EACE,KAAK,CAAEA,IADT,CAGE,QAAQ,CAAEE,QAHZ,CAIE,QAAQ,CAAEN,QAJZ,EAEOI,IAAI,CAACH,EAFZ,CADa,EAAd,CADH,EADF,CAYD,CAhCD,CAkCA,cAAeR,SAAf"},"metadata":{},"sourceType":"module"}